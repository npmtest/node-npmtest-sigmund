{"/home/travis/build/npmtest/node-npmtest-sigmund/test.js":"/* istanbul instrument in package npmtest_sigmund */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-sigmund/lib.npmtest_sigmund.js":"/* istanbul instrument in package npmtest_sigmund */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_sigmund = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_sigmund = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-sigmund/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-sigmund && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_sigmund */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_sigmund\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_sigmund.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_sigmund.rollup.js'] =\n            local.assetsDict['/assets.npmtest_sigmund.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_sigmund.__dirname +\n                    '/lib.npmtest_sigmund.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-sigmund/node_modules/sigmund/sigmund.js":"module.exports = sigmund\nfunction sigmund (subject, maxSessions) {\n    maxSessions = maxSessions || 10;\n    var notes = [];\n    var analysis = '';\n    var RE = RegExp;\n\n    function psychoAnalyze (subject, session) {\n        if (session > maxSessions) return;\n\n        if (typeof subject === 'function' ||\n            typeof subject === 'undefined') {\n            return;\n        }\n\n        if (typeof subject !== 'object' || !subject ||\n            (subject instanceof RE)) {\n            analysis += subject;\n            return;\n        }\n\n        if (notes.indexOf(subject) !== -1 || session === maxSessions) return;\n\n        notes.push(subject);\n        analysis += '{';\n        Object.keys(subject).forEach(function (issue, _, __) {\n            // pseudo-private values.  skip those.\n            if (issue.charAt(0) === '_') return;\n            var to = typeof subject[issue];\n            if (to === 'function' || to === 'undefined') return;\n            analysis += issue;\n            psychoAnalyze(subject[issue], session + 1);\n        });\n    }\n    psychoAnalyze(subject, 0);\n    return analysis;\n}\n\n// vim: set softtabstop=4 shiftwidth=4:\n","/home/travis/build/npmtest/node-npmtest-sigmund/node_modules/sigmund/bench.js":"// different ways to id objects\n// use a req/res pair, since it's crazy deep and cyclical\n\n// sparseFE10 and sigmund are usually pretty close, which is to be expected,\n// since they are essentially the same algorithm, except that sigmund handles\n// regular expression objects properly.\n\n\nvar http = require('http')\nvar util = require('util')\nvar sigmund = require('./sigmund.js')\nvar sreq, sres, creq, cres, test\n\nhttp.createServer(function (q, s) {\n  sreq = q\n  sres = s\n  sres.end('ok')\n  this.close(function () { setTimeout(function () {\n    start()\n  }, 200) })\n}).listen(1337, function () {\n  creq = http.get({ port: 1337 })\n  creq.on('response', function (s) { cres = s })\n})\n\nfunction start () {\n  test = [sreq, sres, creq, cres]\n  // test = sreq\n  // sreq.sres = sres\n  // sreq.creq = creq\n  // sreq.cres = cres\n\n  for (var i in exports.compare) {\n    console.log(i)\n    var hash = exports.compare[i]()\n    console.log(hash)\n    console.log(hash.length)\n    console.log('')\n  }\n\n  require('bench').runMain()\n}\n\nfunction customWs (obj, md, d) {\n  d = d || 0\n  var to = typeof obj\n  if (to === 'undefined' || to === 'function' || to === null) return ''\n  if (d > md || !obj || to !== 'object') return ('' + obj).replace(/[\\n ]+/g, '')\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (i, _, __) {\n      return customWs(i, md, d + 1)\n    }).reduce(function (a, b) { return a + b }, '')\n  }\n\n  var keys = Object.keys(obj)\n  return keys.map(function (k, _, __) {\n    return k + ':' + customWs(obj[k], md, d + 1)\n  }).reduce(function (a, b) { return a + b }, '')\n}\n\nfunction custom (obj, md, d) {\n  d = d || 0\n  var to = typeof obj\n  if (to === 'undefined' || to === 'function' || to === null) return ''\n  if (d > md || !obj || to !== 'object') return '' + obj\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (i, _, __) {\n      return custom(i, md, d + 1)\n    }).reduce(function (a, b) { return a + b }, '')\n  }\n\n  var keys = Object.keys(obj)\n  return keys.map(function (k, _, __) {\n    return k + ':' + custom(obj[k], md, d + 1)\n  }).reduce(function (a, b) { return a + b }, '')\n}\n\nfunction sparseFE2 (obj, maxDepth) {\n  var seen = []\n  var soFar = ''\n  function ch (v, depth) {\n    if (depth > maxDepth) return\n    if (typeof v === 'function' || typeof v === 'undefined') return\n    if (typeof v !== 'object' || !v) {\n      soFar += v\n      return\n    }\n    if (seen.indexOf(v) !== -1 || depth === maxDepth) return\n    seen.push(v)\n    soFar += '{'\n    Object.keys(v).forEach(function (k, _, __) {\n      // pseudo-private values.  skip those.\n      if (k.charAt(0) === '_') return\n      var to = typeof v[k]\n      if (to === 'function' || to === 'undefined') return\n      soFar += k + ':'\n      ch(v[k], depth + 1)\n    })\n    soFar += '}'\n  }\n  ch(obj, 0)\n  return soFar\n}\n\nfunction sparseFE (obj, maxDepth) {\n  var seen = []\n  var soFar = ''\n  function ch (v, depth) {\n    if (depth > maxDepth) return\n    if (typeof v === 'function' || typeof v === 'undefined') return\n    if (typeof v !== 'object' || !v) {\n      soFar += v\n      return\n    }\n    if (seen.indexOf(v) !== -1 || depth === maxDepth) return\n    seen.push(v)\n    soFar += '{'\n    Object.keys(v).forEach(function (k, _, __) {\n      // pseudo-private values.  skip those.\n      if (k.charAt(0) === '_') return\n      var to = typeof v[k]\n      if (to === 'function' || to === 'undefined') return\n      soFar += k\n      ch(v[k], depth + 1)\n    })\n  }\n  ch(obj, 0)\n  return soFar\n}\n\nfunction sparse (obj, maxDepth) {\n  var seen = []\n  var soFar = ''\n  function ch (v, depth) {\n    if (depth > maxDepth) return\n    if (typeof v === 'function' || typeof v === 'undefined') return\n    if (typeof v !== 'object' || !v) {\n      soFar += v\n      return\n    }\n    if (seen.indexOf(v) !== -1 || depth === maxDepth) return\n    seen.push(v)\n    soFar += '{'\n    for (var k in v) {\n      // pseudo-private values.  skip those.\n      if (k.charAt(0) === '_') continue\n      var to = typeof v[k]\n      if (to === 'function' || to === 'undefined') continue\n      soFar += k\n      ch(v[k], depth + 1)\n    }\n  }\n  ch(obj, 0)\n  return soFar\n}\n\nfunction noCommas (obj, maxDepth) {\n  var seen = []\n  var soFar = ''\n  function ch (v, depth) {\n    if (depth > maxDepth) return\n    if (typeof v === 'function' || typeof v === 'undefined') return\n    if (typeof v !== 'object' || !v) {\n      soFar += v\n      return\n    }\n    if (seen.indexOf(v) !== -1 || depth === maxDepth) return\n    seen.push(v)\n    soFar += '{'\n    for (var k in v) {\n      // pseudo-private values.  skip those.\n      if (k.charAt(0) === '_') continue\n      var to = typeof v[k]\n      if (to === 'function' || to === 'undefined') continue\n      soFar += k + ':'\n      ch(v[k], depth + 1)\n    }\n    soFar += '}'\n  }\n  ch(obj, 0)\n  return soFar\n}\n\n\nfunction flatten (obj, maxDepth) {\n  var seen = []\n  var soFar = ''\n  function ch (v, depth) {\n    if (depth > maxDepth) return\n    if (typeof v === 'function' || typeof v === 'undefined') return\n    if (typeof v !== 'object' || !v) {\n      soFar += v\n      return\n    }\n    if (seen.indexOf(v) !== -1 || depth === maxDepth) return\n    seen.push(v)\n    soFar += '{'\n    for (var k in v) {\n      // pseudo-private values.  skip those.\n      if (k.charAt(0) === '_') continue\n      var to = typeof v[k]\n      if (to === 'function' || to === 'undefined') continue\n      soFar += k + ':'\n      ch(v[k], depth + 1)\n      soFar += ','\n    }\n    soFar += '}'\n  }\n  ch(obj, 0)\n  return soFar\n}\n\nexports.compare =\n{\n  // 'custom 2': function () {\n  //   return custom(test, 2, 0)\n  // },\n  // 'customWs 2': function () {\n  //   return customWs(test, 2, 0)\n  // },\n  'JSON.stringify (guarded)': function () {\n    var seen = []\n    return JSON.stringify(test, function (k, v) {\n      if (typeof v !== 'object' || !v) return v\n      if (seen.indexOf(v) !== -1) return undefined\n      seen.push(v)\n      return v\n    })\n  },\n\n  'flatten 10': function () {\n    return flatten(test, 10)\n  },\n\n  // 'flattenFE 10': function () {\n  //   return flattenFE(test, 10)\n  // },\n\n  'noCommas 10': function () {\n    return noCommas(test, 10)\n  },\n\n  'sparse 10': function () {\n    return sparse(test, 10)\n  },\n\n  'sparseFE 10': function () {\n    return sparseFE(test, 10)\n  },\n\n  'sparseFE2 10': function () {\n    return sparseFE2(test, 10)\n  },\n\n  sigmund: function() {\n    return sigmund(test, 10)\n  },\n\n\n  // 'util.inspect 1': function () {\n  //   return util.inspect(test, false, 1, false)\n  // },\n  // 'util.inspect undefined': function () {\n  //   util.inspect(test)\n  // },\n  // 'util.inspect 2': function () {\n  //   util.inspect(test, false, 2, false)\n  // },\n  // 'util.inspect 3': function () {\n  //   util.inspect(test, false, 3, false)\n  // },\n  // 'util.inspect 4': function () {\n  //   util.inspect(test, false, 4, false)\n  // },\n  // 'util.inspect Infinity': function () {\n  //   util.inspect(test, false, Infinity, false)\n  // }\n}\n\n/** results\n**/\n"}